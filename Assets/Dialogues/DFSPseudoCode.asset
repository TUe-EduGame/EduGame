%YAML 1.1
%TAG !u! tag:unity3d.com,2011:
--- !u!114 &11400000
MonoBehaviour:
  m_ObjectHideFlags: 0
  m_CorrespondingSourceObject: {fileID: 0}
  m_PrefabInstance: {fileID: 0}
  m_PrefabAsset: {fileID: 0}
  m_GameObject: {fileID: 0}
  m_Enabled: 1
  m_EditorHideFlags: 0
  m_Script: {fileID: 11500000, guid: dac38ed0d2236dc4982a36a95d5f36aa, type: 3}
  m_Name: DFSPseudoCode
  m_EditorClassIdentifier: 
  lines:
  - text: Now that you know how DFS works, it is time to get to know the pseudocode.
    hasOptions: 0
    options: []
    hasGraphic: 0
    graphic: {fileID: 0}
  - text: 'This pseudocode uses DFS to find a path from a given starting vertex s
      to any other vertex in the graph. '
    hasOptions: 0
    options: []
    hasGraphic: 1
    graphic: {fileID: 21300000, guid: 54c0cd2855e0dfb4db906e0105390787, type: 3}
  - text: 
    hasOptions: 0
    options: []
    hasGraphic: 0
    graphic: {fileID: 0}
  - text: 
    hasOptions: 0
    options: []
    hasGraphic: 0
    graphic: {fileID: 0}
  - text: 
    hasOptions: 0
    options: []
    hasGraphic: 0
    graphic: {fileID: 0}
  - text: 
    hasOptions: 0
    options: []
    hasGraphic: 0
    graphic: {fileID: 0}
  - text: 
    hasOptions: 0
    options: []
    hasGraphic: 0
    graphic: {fileID: 0}
  - text: 
    hasOptions: 0
    options: []
    hasGraphic: 0
    graphic: {fileID: 0}
  - text: 
    hasOptions: 0
    options: []
    hasGraphic: 0
    graphic: {fileID: 0}
  - text: 
    hasOptions: 0
    options: []
    hasGraphic: 0
    graphic: {fileID: 0}
  nextDialogue: {fileID: 0}
  canExit: 0
